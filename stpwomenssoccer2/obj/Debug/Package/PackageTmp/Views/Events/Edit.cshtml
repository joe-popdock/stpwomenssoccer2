@model stpwomenssoccer2.Models.EventModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="col-sm-6 col-sm-offset-3 bg-primary" style="margin-bottom:120px;margin-top:25px;">
    <h2>Edit Event / Game</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EventId)

    <div class="form-group">
        @Html.LabelFor(model => model.EventTypeId, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="editor-field col-sm-8">
            @Html.DropDownList("EventTypeId")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TeamId, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="editor-field col-sm-8">
            @Html.DropDownList("TeamId")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Expired, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="col-sm-8" style="margin-left:10px">
            @Html.CheckBoxFor(model => model.Expired, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Expired, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-10 col-sm-offset-2 text-center">
            <input type="submit" value="Save" class="btn btn-default" style="font-weight:bold; background-color:#FFD700; color:#191970; margin-bottom:20px" /> |
            @if (Model.EventTypeId != 1)
            {
                @Html.ActionLink("Back to List", "Index")
            }
            else
            {
                @Html.ActionLink("Back to List", "Schedule")
            }
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
2